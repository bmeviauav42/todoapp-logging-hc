apiVersion: v1
kind: Service
metadata:
  name: todos
  labels:
    app.kubernetes.io/name: todos
    todosapp.tier: backend
    app.kubernetes.io/instance: {{ .Release.Name }} # Ez uj
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: todos
    app.kubernetes.io/instance: {{ .Release.Name }} # Ez uj
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todos
  labels:
    app.kubernetes.io/name: todos
    todosapp.tier: backend
    app.kubernetes.io/instance: {{ .Release.Name }} # Ez uj
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: todos
      app.kubernetes.io/instance: {{ .Release.Name }} # Ez uj
  template:
    metadata:
      labels:
        app.kubernetes.io/name: todos
        todosapp.tier: backend
        app.kubernetes.io/instance: {{ .Release.Name }} # Ez uj
    spec:
      containers:
        - name: todos
          image: todoapp/todos:{{ .Values.todos.tag }}
          ports:
            - name: http
              containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ASPNETCORE_ElasticsearchUrl
              value: "http://elasticsearch:9200"
            - name: ASPNETCORE_RedisUrl
              value: "redis:6379"
      restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: todos
  labels:
    app.kubernetes.io/name: todos
    todosapp.tier: backend
    app.kubernetes.io/instance: {{ .Release.Name }} # Ez uj
  annotations:
    traefik.ingress.kubernetes.io/auth-url: http://users/api/auth
    traefik.ingress.kubernetes.io/auth-response-headers: Authorization
    traefik.ingress.kubernetes.io/auth-type: forward
spec:
  rules:
    - http:
        paths:
          - path: /api/todos
            backend:
              serviceName: todos
              servicePort: http
