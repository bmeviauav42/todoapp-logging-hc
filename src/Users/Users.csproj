<Project Sdk="Microsoft.Build.NoTargets/1.0.40">
  
  <!-- Dummy project so that all microservices are present in the solution -->
  <!-- Build of this project is handled by Dockerfile -->

  <PropertyGroup>
    <!-- We have to specify a dummy target framework so VS builds the project correctly -->
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <!-- We want to build the projects if the source files change -->
    <PyInputs Include="$(ProjectDir)src\**" />
    <Compile Remove="Docker\obj\**" />
    <EmbeddedResource Remove="Docker\obj\**" />
    <None Remove="Docker\obj\**" />
    <None Remove=".ensurebuild" />
    <None Remove=".gitignore" />

    <!-- Dummy build result file -->
    <PyOutputs Include="$(ProjectDir).ensurebuild" />
  </ItemGroup>

  <!-- If the timestamp of the input files (above) is newer than the timestamp of the dummy output file, MSBuild will trigger the build -->
  <Target Name="BuildPython" Inputs="@(PyInputs)" Outputs="@(PyOutputs)" BeforeTargets="Build">
    <!-- Build the container as described in the dockerfile -->
    <Exec WorkingDirectory="$(SolutionDir)" Command="docker build -t todoapp/users:dev -f users/docker/Dockerfile ." />
    <!-- Touch the dummy output file. Its timestamp will be the time of build. -->
    <Touch Files="@(PyOutputs)" AlwaysCreate="true" />
  </Target>
</Project>
